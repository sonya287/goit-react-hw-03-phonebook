{"version":3,"sources":["components/Filter/Filter.module.scss","components/Form/Form.module.scss","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","contactsArr.js","App.js","index.js","components/ContactsList/ContactsList.module.scss","App.module.scss"],"names":["module","exports","Form","state","name","number","getContactName","e","currentTarget","value","setState","handleSubmit","preventDefault","props","addContact","resetInput","this","onSubmit","className","styles","form","label","inputs","type","autoComplete","pattern","title","required","onChange","button","React","Component","ContactsList","contacts","deleteContact","list","map","id","item","item_name","item_number","onClick","Filter","filter","input","contactsList","uuidv4","App","contactsArr","findContactName","contactName","find","alert","getFilterValue","filterContactsValue","normalizeFilter","toLowerCase","includes","contact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContactsList","setItem","stringify","container","contacts_container","contact_title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71a3abbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__jGR6Y\",\"input\":\"Filter_input__1MDnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1Erw1\",\"label\":\"Form_label__1N6j9\",\"inputs\":\"Form_inputs__U83Dt\",\"button\":\"Form_button__2rHEx\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Form.module.scss';\n\nclass Form extends React.Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n  state = {\n    name: '',\n    number: '',\n  };\n  getContactName = e => {\n    const { value, name } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.addContact(this.state);\n    this.resetInput();\n  };\n  resetInput = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.inputs}\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.getContactName}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.inputs}\n            type=\"tel\"\n            name=\"number\"\n            autoComplete=\"off\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.getContactName}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactsList.module.scss';\n\nconst ContactsList = ({ contacts, deleteContact }) => (\n  <ul className={styles.list}>\n    {contacts.map(({ name, id, number }) => (\n      <li key={id} className={styles.item}>\n        <span className={styles.item_name}>{name}</span>\n        <span className={styles.item_number}>{number}</span>\n\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n        value={filter}\n      />\n    </label>\n  );\n};\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n};\nexport default Filter;\n","import { v4 as uuidv4 } from 'uuid';\nconst contactsList = [\n  { id: uuidv4(), name: 'Homer Simpson', number: '+1-(217)-459-12-56' },\n  { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\n  { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\n  { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\n  { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\n];\nexport default contactsList;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Form from './components/Form';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport contactsArr from './contactsArr';\n\nimport styles from './App.module.scss';\n\nclass App extends React.Component {\n  state = {\n    contacts: contactsArr,\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContactsList = this.state.contacts;\n    const prevContactsList = prevState.contacts;\n    if (nextContactsList !== prevContactsList) {\n      localStorage.setItem('contacts', JSON.stringify(nextContactsList));\n    }\n  }\n\n  findContactName = contactName => {\n    const { contacts } = this.state;\n    return contacts.find(({ name }) => name === contactName);\n  };\n\n  addContact = ({ name, number }) => {\n    if (this.findContactName(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [\n          {\n            name,\n            number,\n            id: uuidv4(),\n          },\n          ...contacts,\n        ],\n      };\n    });\n  };\n\n  getFilterValue = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  filterContactsValue = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(normalizeFilter);\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <section className={styles.container}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <Form addContact={this.addContact} />\n        <div className={styles.contacts_container}>\n          <h2 className={styles.contact_title}>Contacts</h2>\n          <Filter filter={filter} onChange={this.getFilterValue} />\n          <ContactsList\n            contacts={this.filterContactsValue()}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'modern-normalize';\nimport './styles.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__SHR0L\",\"item\":\"ContactsList_item__2iIWG\",\"item_name\":\"ContactsList_item_name__3-dM0\",\"item_number\":\"ContactsList_item_number__3U87x\",\"button\":\"ContactsList_button__3wJWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__34kdI\",\"title\":\"App_title__3b_LY\",\"contacts_container\":\"App_contacts_container__221SM\",\"contact_title\":\"App_contact_title__14vPh\"};"],"sourceRoot":""}